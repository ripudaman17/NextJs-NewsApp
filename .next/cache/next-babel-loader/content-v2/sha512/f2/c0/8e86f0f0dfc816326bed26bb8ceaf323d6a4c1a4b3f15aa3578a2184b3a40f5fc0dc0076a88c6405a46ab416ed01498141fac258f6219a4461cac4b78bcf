{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\React\\\\NextJs-NewsApp\\\\pages\\\\index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nvar DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1024px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some Address 5, 12345, Some City\",\n  description: \"This is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1024px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some Address 10, 45, Some City\",\n  description: \"This is a second meetup!\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n} // export async function getServerSideProps(context){ //this function will not run during the build process but always on the server after deployment\n//     //fetch data from an API \n//     //any code that you write here always run on the server\n//     const req = context.req;\n//     const res = context.res;\n//   return {\n//       props: {\n//         meetups: DUMMY_MEETUPS\n//       }\n//     };\n// }\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/user/Documents/React/NextJs-NewsApp/pages/index.js"],"names":["MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAGA,IAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,wHAJJ;AAKEC,EAAAA,OAAO,EAAE,kCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,wHAJJ;AAKEC,EAAAA,OAAO,EAAE,gCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAGvB,sBACI,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAnBSF,Q;;AAiDT,eAAeA,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A First Meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1024px-Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Some Address 5, 12345, Some City\",\r\n    description: \"This is a first meetup!\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A Second Meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1024px-Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Some Address 10, 45, Some City\",\r\n    description: \"This is a second meetup!\",\r\n  },\r\n];\r\n\r\nfunction HomePage(props) {\r\n\r\n   \r\n  return (\r\n      <MeetupList meetups={props.meetups} />\r\n  );\r\n}\r\n\r\n// export async function getServerSideProps(context){ //this function will not run during the build process but always on the server after deployment\r\n//     //fetch data from an API \r\n//     //any code that you write here always run on the server\r\n\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n//   return {\r\n//       props: {\r\n//         meetups: DUMMY_MEETUPS\r\n//       }\r\n//     };\r\n// }\r\n\r\nexport async function getStaticProps(){ //this will only execute in the pages component\r\n  //the code that we write here is not going to be executed in the client side or end up in the client side.\r\n\r\n  //fetch data from an API\r\n\r\n  const client =  await MongoClient.connect('mongodb+srv://ripu3:ripsim690@cluster0.h0nsg.mongodb.net/meetups?retryWrites=true&w=majority');\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n   \r\n  const meetups = await meetupsCollection.find().toArray();//so that we get back an array of documents\r\n\r\n  client.close();\r\n\r\n  return{\r\n    props: {\r\n      meetups: meetups.map(meetup => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString()  //it will convert this object to a string\r\n      }))\r\n    },\r\n    //when we add this property we unlock a feature called incremental static generation\r\n    revalidate: 10           //it will revalidate the server in every 10 seconds, this ensures that your data is not older than 10 sec              \r\n  };\r\n  \r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}