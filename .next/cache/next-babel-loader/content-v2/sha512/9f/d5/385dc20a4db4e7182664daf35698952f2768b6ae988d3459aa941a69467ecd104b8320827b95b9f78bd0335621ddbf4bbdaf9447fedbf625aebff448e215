{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsx(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1024px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"A First Meetup!\",\n    address: \"Some Address 123, Some City\",\n    description: \"The meetup description\"\n  });\n}\n\nexport async function getStaticPaths() {\n  return {\n    fallback: false,\n    //this key fallback, tells next js whether your paths array contains all supported parameter values or just some of them\n    // if you set it to false, you say your paths contains all supported meetupID values and if there is any other ID other than in the paths array, it will generate 404 error\n    // if you set it to true, next js will try to generate a page for this meetupID dynamically on the server for the incoming request\n    paths: [{\n      params: {\n        meetupId: \"m1\"\n      }\n    }, {\n      params: {\n        meetupId: \"m2\"\n      }\n    }]\n  };\n} //we can define some paths instead of all paths. for eg if we have 100s of pages and we dont wanna pre-generate all of them, but only few of them\n\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId; //this will be an obj where our identifiers between the square brackets will be properties\n\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1024px-Stadtbild_M%C3%BCnchen.jpg\",\n        id: meetupId,\n        title: \"A First Meetup!\",\n        address: \"Some Street 5, Some City\",\n        description: \"The meetup description\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":null,"metadata":{},"sourceType":"module"}