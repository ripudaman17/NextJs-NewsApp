{"ast":null,"code":"import { MongoClient } from 'mongodb'; //in here we will define server side code because api routes will only run on the server, never on the client\n//url:- /api/new-meetup, if the request is sent to this url then it will trigger the functions in here\n//POST /api/new-meetup\n\nasync function handler(req, res) {\n  //we can get req body or header and res object could be sent\n  if (req.method === 'POST') {\n    const data = req.body;\n    const client = await MongoClient.connect('mongodb+srv://ripu3:ripsim690@cluster0.h0nsg.mongodb.net/meetups?retryWrites=true&w=majority'); //connect returns a promise\n    //this is the code we never wanna run on the client side as we could expose our credentials\n\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n    const result = await meetupsCollection.insertOne(data); //it will add one new document/entry in the collection/table. it also returns a promise\n\n    console.log(result);\n    client.close();\n    res.status(201).json({\n      message: 'Meetup inserted!'\n    }); //res is an object\n    //201 means something was inserted successfully. json data will be added to the response\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["C:/Users/user/Documents/React/NextJs-NewsApp/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","db","meetupsCollection","collection","result","insertOne","console","log","close","status","json","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B,C,CAEA;AACA;AACA;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAgC;AAAG;AAC/B,MAAGD,GAAG,CAACE,MAAJ,KAAe,MAAlB,EAAyB;AACrB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAED,UAAMC,MAAM,GAAI,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,8FAApB,CAAtB,CAHsB,CAGqH;AAC1I;;AACA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BR,IAA5B,CAArB,CATqB,CASoC;;AACzDS,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAL,IAAAA,MAAM,CAACS,KAAP;AAEAb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAArB,EAbqB,CAaiC;AACtD;AACH;AACJ;;AAED,eAAelB,OAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\n//in here we will define server side code because api routes will only run on the server, never on the client\r\n//url:- /api/new-meetup, if the request is sent to this url then it will trigger the functions in here\r\n//POST /api/new-meetup\r\n\r\nasync function handler(req, res){  //we can get req body or header and res object could be sent\r\n    if(req.method === 'POST'){\r\n        const data = req.body;\r\n\r\n       const client =  await MongoClient.connect('mongodb+srv://ripu3:ripsim690@cluster0.h0nsg.mongodb.net/meetups?retryWrites=true&w=majority'); //connect returns a promise\r\n        //this is the code we never wanna run on the client side as we could expose our credentials\r\n        const db = client.db();\r\n\r\n        const meetupsCollection = db.collection('meetups');\r\n\r\n        const result = await meetupsCollection.insertOne(data);  //it will add one new document/entry in the collection/table. it also returns a promise\r\n        console.log(result);\r\n        client.close();\r\n\r\n        res.status(201).json({message: 'Meetup inserted!'});  //res is an object\r\n        //201 means something was inserted successfully. json data will be added to the response\r\n    }\r\n} \r\n\r\nexport default handler;"]},"metadata":{},"sourceType":"module"}